{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/Feedback/Feedback.module.css","components/Notifications/Notifications.module.css","components/Section/Section.jsx","components/Notifications/Notifications.jsx","components/Statistics/Statistics.jsx","components/Feedback/Feedback.jsx","data/constants.js","components/App.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","Notifications","message","Statistics","good","neutral","bad","total","positivePerc","list","item","FeedbackOption","options","onLeaveFeedback","map","option","button","type","data-feedback","onClick","FEEDBACK_OPTIONS","App","useState","goodFeedback","setGoodFeedback","neutralFeedback","setNeutralFeedback","badFeedback","setBadFeedback","countTotalFeedback","Feedback","target","dataset","feedback","prevState","totalFeedback","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,kBCAzDD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,gBCA7DD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,OAAS,2B,iBCAzDD,EAAOC,QAAU,CAAC,QAAU,iC,qICgBbC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAWC,IAAEC,QAAtB,UACE,oBAAIF,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,M,gCCDQI,EAJO,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,mBAAGJ,UAAWC,IAAEG,QAAhB,SAA0BA,KCyBlDC,EAxBI,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,IAAKC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,aAC/C,OACE,qCACGD,EAAQ,GACP,qBAAIT,UAAWC,IAAEU,KAAjB,UACE,qBAAIX,UAAWC,IAAEW,KAAjB,kBAA6BN,KAC7B,qBAAIN,UAAWC,IAAEW,KAAjB,qBAAgCL,KAChC,qBAAIP,UAAWC,IAAEW,KAAjB,iBAA4BJ,KAC5B,qBAAIR,UAAWC,IAAEW,KAAjB,mBAA8BH,KAC9B,qBAAIT,UAAWC,IAAEW,KAAjB,iCAA4CF,EAA5C,UAGO,IAAVD,GAAe,cAAC,EAAD,CAAeL,QAAQ,0B,gBCS9BS,EArBQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACrB,qBAAKf,UAAWC,IAAEa,QAAlB,SACGA,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEjB,UAAWC,IAAEiB,OACbC,KAAK,SACLC,gBAAeH,EACfI,QAASN,EAJX,SAOGE,GAFIA,SCXAK,EAAmB,CAAC,OAAQ,UAAW,OCOrC,SAASC,IAAO,IAAD,EACYC,mBAAS,GADrB,mBACrBC,EADqB,KACPC,EADO,OAEkBF,mBAAS,GAF3B,mBAErBG,EAFqB,KAEJC,EAFI,OAGUJ,mBAAS,GAHnB,mBAGrBK,EAHqB,KAGRC,EAHQ,KAKtBC,EAAqB,WACzB,OAAON,EAAeI,EAAcF,GA2BtC,OACE,gCACE,cAAC,EAAD,CAAS7B,MAAM,wBAAf,SACE,cAACkC,EAAD,CACElB,QAASQ,EACTP,gBAzBe,SAAC,GAGtB,OAHqC,EAAbkB,OACIC,QAApBC,UAGN,IAAK,OACHT,GAAgB,SAAAU,GAAS,OAAIA,EAAY,KACzC,MAEF,IAAK,UACHR,GAAmB,SAAAQ,GAAS,OAAIA,EAAY,KAC5C,MAEF,IAAK,MACHN,GAAe,SAAAM,GAAS,OAAIA,EAAY,KACxC,MAEF,QACE,aAWF,cAAC,EAAD,CAAStC,MAAM,aAAf,SACE,cAAC,EAAD,CACEQ,KAAMmB,EACNlB,QAASoB,EACTnB,IAAKqB,EACLpB,MAAOsB,IACPrB,aAvCgC,WACtC,IAAI2B,EAAgBN,IACpB,OAAOM,EAAgBC,KAAKC,MAAOd,EAAeY,EAAiB,KAAO,EAqCtDG,UCjDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACpB,EAAD,MAEFqB,SAASC,eAAe,W","file":"static/js/main.68e5c42c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3b6zD\",\"item\":\"Statistics_item__FCEYn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__z-F2S\",\"title\":\"Section_title__3zVzr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Feedback_list__2Bqpr\",\"button\":\"Feedback_button__30mR_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notifications_message__2r7zQ\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from './Notifications.module.css';\nconst Notifications = ({ message }) => <p className={s.message}>{message}</p>;\n\nNotifications.propTypes = { message: PropTypes.string.isRequired };\n\nexport default Notifications;\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\nimport Notifications from '../Notifications';\nconst Statistics = ({ good, neutral, bad, total, positivePerc }) => {\n  return (\n    <>\n      {total > 0 && (\n        <ul className={s.list}>\n          <li className={s.item}>Good:{good}</li>\n          <li className={s.item}>Neutral:{neutral}</li>\n          <li className={s.item}>Bad:{bad}</li>\n          <li className={s.item}>Total:{total}</li>\n          <li className={s.item}>Positive Percantage:{positivePerc}%</li>\n        </ul>\n      )}\n      {total === 0 && <Notifications message=\"No Feedback given\" />}\n    </>\n  );\n};\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePerc: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './Feedback.module.css';\n\nconst FeedbackOption = ({ options, onLeaveFeedback }) => (\n  <div className={s.options}>\n    {options.map(option => (\n      <button\n        className={s.button}\n        type=\"button\"\n        data-feedback={option}\n        onClick={onLeaveFeedback}\n        key={option}\n      >\n        {option}\n      </button>\n    ))}\n  </div>\n);\n\nFeedbackOption.propTypes = {\n  options: PropTypes.array,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOption;\n","export const FEEDBACK_OPTIONS = ['good', 'neutral', 'bad'];\n","import { useState } from 'react';\n\nimport Section from './Section';\nimport Statistics from './Statistics';\nimport FeedbackOption from './Feedback';\nimport { FEEDBACK_OPTIONS } from '../data/constants';\n\nexport default function App() {\n  const [goodFeedback, setGoodFeedback] = useState(0);\n  const [neutralFeedback, setNeutralFeedback] = useState(0);\n  const [badFeedback, setBadFeedback] = useState(0);\n\n  const countTotalFeedback = () => {\n    return goodFeedback + badFeedback + neutralFeedback;\n  };\n  const countPositiveFeedbackPercentage = () => {\n    let totalFeedback = countTotalFeedback();\n    return totalFeedback ? Math.round((goodFeedback / totalFeedback) * 100) : 0;\n  };\n\n  const handleFeedback = ({ target }) => {\n    const { feedback } = target.dataset;\n\n    switch (feedback) {\n      case 'good':\n        setGoodFeedback(prevState => prevState + 1);\n        break;\n\n      case 'neutral':\n        setNeutralFeedback(prevState => prevState + 1);\n        break;\n\n      case 'bad':\n        setBadFeedback(prevState => prevState + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n  return (\n    <div>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOption\n          options={FEEDBACK_OPTIONS}\n          onLeaveFeedback={handleFeedback}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        <Statistics\n          good={goodFeedback}\n          neutral={neutralFeedback}\n          bad={badFeedback}\n          total={countTotalFeedback()}\n          positivePerc={countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}